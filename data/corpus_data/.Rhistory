power <- mutate(power,
SubjGender = factor(SubjGender),
HierarchyCond = factor(HierarchyCond),
GenderCond = factor(GenderCond),
Task = factor(Task))
# Chunk 4
contrasts(power$SubjGender) <- contr.sum(2) / 2 * -1
contrasts(power$HierarchyCond) <- contr.sum(2) / 2 * -1
contrasts(power$GenderCond) <- contr.sum(2) / 2 * -1
contrasts(power$Task) <- contr.sum(2) / 2
# Chunk 5
power <- rename(power,
Hierarchy = HierarchyCond,
Gender = GenderCond)
# Chunk 6
my_priors <- c(prior(normal(0, 0.2), class = b))
main_mdl <- brm(LogRT ~ SubjGender + Task +
Hierarchy + Gender +
Hierarchy:Gender +
SubjGender:Hierarchy +
SubjGender:Gender +
Hierarchy:Gender:SubjGender +
(1 + Hierarchy + Gender + Hierarchy:Gender|Subj) +
(1 + Hierarchy + Gender + Hierarchy:Gender|PairName),
data = power,
prior = my_priors,
warmup = 2000,
iter = 4000,
chains = 4,
cores = 4,
init = 0,
seed = 42,
control = list(adapt_delta = 0.99,
max_treedepth = 13))
# Chunk 1
# Packages:
library(tidyverse)
library(brms)
# Data:
power <- read_csv('data/hierarchy_experiment_cleaned.csv')
# ggplot2 theme:
source('timo_theme.R')
# Chunk 2
options(mc.cores = parallel::detectCores())
# Chunk 3
power <- mutate(power,
SubjGender = factor(SubjGender),
HierarchyCond = factor(HierarchyCond),
GenderCond = factor(GenderCond),
Task = factor(Task))
# Chunk 4
contrasts(power$SubjGender) <- contr.sum(2) / 2 * -1
contrasts(power$HierarchyCond) <- contr.sum(2) / 2 * -1
contrasts(power$GenderCond) <- contr.sum(2) / 2 * -1
contrasts(power$Task) <- contr.sum(2) / 2
# Chunk 5
power <- rename(power,
Hierarchy = HierarchyCond,
Gender = GenderCond)
# Chunk 6
my_priors <- c(prior(normal(0, 0.2), class = b))
main_mdl <- brm(LogRT ~ SubjGender + Task +
Hierarchy + Gender +
Hierarchy:Gender +
SubjGender:Hierarchy +
SubjGender:Gender +
Hierarchy:Gender:SubjGender +
(1 + Hierarchy + Gender + Hierarchy:Gender|Subj) +
(1 + Hierarchy + Gender + Hierarchy:Gender|PairName),
data = power,
prior = my_priors,
warmup = 2000,
iter = 4000,
chains = 4,
cores = 4,
init = 0,
seed = 42)
1200 / 60
summary(main_mdl)
summary(main_mdl)
save(main_mdl, file = 'main_mdl.RData')
p <- posterior_samples(main_mdl)
subjGender <- p$'b_SubjGender1'
task <- p$'b_Task1'
hierarchy <- p$'b_Hierarchy1'
gender <- p$'b_Gender1'
hierarchy_gender <- p$'b_Hierarchy1:Gender1'
subjGender_hierarchy <- p$'b_SubjGender1:Hierarchy1'
subjGender_Gender <- p$'b_SubjGender1:Gender1'
threeway <- p$'b_SubjGender1:Hierarchy1:Gender1'
contrasts(power$SubjGender)
contrasts(power$Task)
contrasts(power$Hierarchy)
contrasts(power$Gender)
# Subject effect:
sum(subjGender < 0) / nrow(p)
# Task effect:
sum(task < 0) / nrow(p)
# Gender effect:
sum(gender < 0) / nrow(p)
# Hierarchy effect:
sum(hierarchy_gender < 0) / nrow(p)
# Subject gender * hierarchy interaction:
sum(subjGender_hierarchy< 0) / nrow(p)
# Subject gender * gender interaction:
sum(subjGender_Gender < 0) / nrow(p)
# Threeway interaction:
sum(threeway < 0) / nrow(p)
sum(hierarchy < 0) / nrow(p)
sum(hierarchy_gender < 0) / nrow(p)
marginal_effects(main_mdl, 'Task')
marginal_effects(main_mdl, 'Gender')
marginal_effects(main_mdl, 'Hierarchy')
marginal_effects(main_mdl, 'Gender:Hierarchy')
conditions <- tibble(SubjGender = factor(c('female', 'male')))
interaction_preds <- marginal_effects(main_mdl, 'Gender:Hierarchy',
conditions = conditions)
plot(interaction_preds)
# Chunk 1
# Packages:
library(tidyverse)
library(gridExtra)
# Data:
power <- read_csv('data/hierarchy_experiment_cleaned.csv')
# ggplot2 theme:
source('timo_theme.R')
# Chunk 2
length(unique(power$Subj))
# Chunk 3
# Create a table with subject identifiers by gender:
gender_tab <- table(power$Subj, power$SubjGender)
# Check 0 counts to get number of genders:
genders <- apply(gender_tab, 1, FUN = function(x) ifelse(x[1] == 0, 'male', 'female'))
# How many each?
table(genders)
# Chunk 4
power %>% summarize(M = round(mean(RT), 0),
SD = round(sd(RT), 0))
power
power %>% group_by(SubjGender) %>%
summarize(M = round(mean(RT)) %>% pull() %>% diff()
power %>% group_by(SubjGender) %>%
summarize(M = round(mean(RT), 0),
SD = round(sd(RT), 0))
power %>% group_by(SubjGender) %>%
summarize(M = round(mean(RT), 0)) %>%
pull() %>% diff()
power %>% group_by(HierarchyCond) %>%
summarize(M = round(mean(RT), 0),
SD = round(sd(RT), 0))
power %>% group_by(HierarchyCond) %>%
summarize(M = round(mean(RT), 0)) %>%
pull() %>% diff()
power %>% group_by(GenderCond) %>%
summarize(M = round(mean(RT), 0),
SD = round(sd(RT), 0))
power %>% group_by(GenderCond) %>%
summarize(M = round(mean(RT), 0)) %>%
pull() %>% diff()
power %>% group_by(GenderCond) %>%
summarize(M = round(mean(RT), 0),
SD = round(sd(RT), 0))
power %>% group_by(GenderCond) %>%
summarize(M = round(mean(RT), 0),
SD = round(sd(RT), 0))
power %>% group_by(GenderCond) %>%
summarize(M = round(mean(RT), 0)) %>%
pull() %>% diff()
power %>% group_by(HierarchyCond) %>%
summarize(M = round(mean(RT), 0),
SD = round(sd(RT), 0))
power %>% group_by(HierarchyCond) %>%
summarize(M = round(mean(RT), 0)) %>%
pull() %>% diff()
power %>% group_by(Task) %>%
summarize(M = round(mean(RT), 0),
SD = round(sd(RT), 0))
power %>% group_by(Task) %>%
summarize(M = round(mean(RT), 0)) %>%
pull() %>% diff()
# Chunk 1
# Packages:
library(tidyverse)
library(brms)
# Data:
power <- read_csv('data/hierarchy_experiment_cleaned.csv')
# ggplot2 theme:
source('timo_theme.R')
# Chunk 2
setwd('data/corpus_data')
# Chunk 3
all_files <- list.files()
# Chunk 4
all_profs <- c()
for (i in seq_along(all_files)) {
this_file <- read_csv(all_files[i])
this_file$FileName <- all_files[i]
all_profs <- bind_rows(all_profs, this_file)
}
all_profs %>% print(n = 2, width = Inf)
# Chunk 5
all_profs <- select(all_profs, `Record#`:FileName)
# Chunk 6
all_profs <- rename(all_profs, ID = `Record#`)
# Chunk 7
all_profs <- mutate(all_profs,
Profession = str_split(FileName, '.csv', simplify = TRUE)[, 1],
Profession = str_to_lower(Profession))
# Chunk 8
all(filter(all_profs, Tagging == 'm')$Male == 1)
all(filter(all_profs, Tagging == 'f')$Female == 1)
all(filter(all_profs, Tagging == 'd')$Disregarded == 1)
all(filter(all_profs, Tagging == 'u')$Unknown == 1)
# Chunk 9
row_id <- which(is.na(all_profs$Disregarded) & all_profs$Tagging == 'd')
all_profs[row_id, ]$Disregarded <- 1
rm(row_id)
all_profs
all_profs %>% count(Profession)
all_profs %>% count(Profession, sort = TRUE) %>%
print(n = Inf)
filter(all_profs, Profession == 'dancer')
filter(all_profs, Profession == 'dancer') %>% print(n = Inf)
all_profs
all_profs <- filter(all_profs, !is.na(Tagging))
all_profs
all_profs %>% count(Profession, sort = TRUE) %>%
print(n = Inf)
filter(all_profs, Profession == 'general') %>% print(n = Inf)
filter(all_profs, Profession == 'pilot') %>% print(n = Inf)
all_profs %>% count(Profesion, Tagging)
all_profs %>% count(Profession, Tagging)
all_profs %>% count(Profession, Tagging) %>%
spread(Tagging, n)
prof_counts <- all_profs %>% count(Profession, Tagging) %>%
spread(Tagging, n)
prof_counts %>% print(n = Inf)
prof_counts <- all_profs %>% count(Profession, Tagging) %>%
spread(Tagging, n, fill = 0) %>%
mutate(M_or_F = m + f) %>%
sort(desc(M_or_F))
prof_counts %>% print(n = Inf)
?spread
prof_counts <- all_profs %>% count(Profession, Tagging) %>%
spread(Tagging, n, fill = 0) %>%
mutate(M_or_F = m + f) %>%
arrange(desc(M_or_F))
prof_counts %>% print(n = Inf)
prof_counts %>%
mutate(MF_ratio = m / f) %>%
print(n = Inf)
prof_counts %>%
mutate(MF_ratio = (m + 1) / (f + 1)) %>%
print(n = Inf)
prof_counts %>%
mutate(MF_ratio = (m + 1) / (f + 1)) %>%
arrange(desc(MF_ratio))
print(n = Inf)
prof_counts %>%
mutate(MF_ratio = (m + 1) / (f + 1)) %>%
arrange(desc(MF_ratio)) %>%
print(n = Inf)
prof_counts <- mutate(prof_counts,
Weights = M_or_F / max(M_or_F))
prof_counts
prof_counts %>% print(n = Inf)
getwd()
read_csv('../misersky_2014_norms_updated.csv')
norms <- read_csv('../misersky_2014_norms_updated.csv')
norms
prof_counts
norms <- read_csv('../misersky_2014_norms_updated.csv') %>%
mutate(profession = str_to_lower(profession))
norms <- read_csv('../misersky_2014_norms_updated.csv') %>%
mutate(profession = str_to_lower(profession)) %>%
rename(Profession = profession)
anti_join(norms, prof_counts)
anti_join(prof_counts, norms)
write_csv(prof_counts, '../profession_corpus_counts.csv')
power <- read_csv('hierarchy_experiment_cleaned.csv')
power <- read_csv('../hierarchy_experiment_cleaned.csv')
power
select(power, HighPosition, LowPosition, PairName)
select(power, HighPosition, LowPosition, PairName) %>% filter(!duplicated(PairName))
items <- power %>% select(HighPosition, LowPosition, PairName) %>%
filter(!duplicated(PairName))
match(items$HighPosition, prof_counts$Profession)
items$High_Ratio <- prof_counts[match(items$HighPosition, prof_counts$Profession), ]$MF_ratio
items$HighPosition
items$High_Ratio
items$HighPosition
match(items$HighPosition, prof_counts$Profession)
prof_counts[match(items$HighPosition, prof_counts$Profession), ]
# Chunk 1
# Packages:
library(tidyverse)
library(brms)
# Data:
power <- read_csv('data/hierarchy_experiment_cleaned.csv')
# ggplot2 theme:
source('timo_theme.R')
# Chunk 2
setwd('data/corpus_data')
# Chunk 3
all_files <- list.files()
# Chunk 4
all_profs <- c()
for (i in seq_along(all_files)) {
this_file <- read_csv(all_files[i])
this_file$FileName <- all_files[i]
all_profs <- bind_rows(all_profs, this_file)
}
all_profs %>% print(n = 2, width = Inf)
# Chunk 5
all_profs <- select(all_profs, `Record#`:FileName)
# Chunk 6
all_profs <- rename(all_profs, ID = `Record#`)
# Chunk 7
all_profs <- mutate(all_profs,
Profession = str_split(FileName, '.csv', simplify = TRUE)[, 1],
Profession = str_to_lower(Profession))
# Chunk 8
all(filter(all_profs, Tagging == 'm')$Male == 1)
all(filter(all_profs, Tagging == 'f')$Female == 1)
all(filter(all_profs, Tagging == 'd')$Disregarded == 1)
all(filter(all_profs, Tagging == 'u')$Unknown == 1)
# Chunk 9
row_id <- which(is.na(all_profs$Disregarded) & all_profs$Tagging == 'd')
all_profs[row_id, ]$Disregarded <- 1
rm(row_id)
# Chunk 10
all(filter(all_profs, Tagging == 'd')$Disregarded == 1)
# Chunk 11
all_profs <- filter(all_profs, !is.na(Tagging))
# Chunk 12
all_profs %>% count(Profession, sort = TRUE) %>%
print(n = Inf)
# Chunk 13
prof_counts <- all_profs %>% count(Profession, Tagging) %>%
spread(Tagging, n, fill = 0) %>%
mutate(M_or_F = m + f) %>%
arrange(desc(M_or_F))
prof_counts %>% print(n = Inf)
# Chunk 14
prof_counts <- prof_counts %>%
mutate(MF_ratio = (m + 1) / (f + 1)) %>%
arrange(desc(MF_ratio))
prof_counts %>% print(n = Inf)
# Chunk 15
prof_counts <- mutate(prof_counts,
Weights = M_or_F / max(M_or_F))
# Chunk 16
write_csv(prof_counts, '../profession_corpus_counts.csv')
# Chunk 17
power <- read_csv('../hierarchy_experiment_cleaned.csv')
prof_counts[match(items$HighPosition, prof_counts$Profession), ]
items$HighRatio <- prof_counts[match(items$HighPosition, prof_counts$Profession), ]$MF_ratio
items$HighRatio <- prof_counts[match(items$HighPosition, prof_counts$Profession), ]$MF_ratio
items$LowRatio <- prof_counts[match(items$LowPosition, prof_counts$Profession), ]$MF_ratio
items
0.818 / 0.528
4.75 / 1.35
28.7 / 6.67
# Chunk 1
# Packages:
library(tidyverse)
library(brms)
# Data:
power <- read_csv('data/hierarchy_experiment_cleaned.csv')
# ggplot2 theme:
source('timo_theme.R')
# Chunk 2
setwd('data/corpus_data')
# Chunk 3
all_files <- list.files()
# Chunk 4
all_profs <- c()
for (i in seq_along(all_files)) {
this_file <- read_csv(all_files[i])
this_file$FileName <- all_files[i]
all_profs <- bind_rows(all_profs, this_file)
}
all_profs %>% print(n = 2, width = Inf)
# Chunk 5
all_profs <- select(all_profs, `Record#`:FileName)
# Chunk 6
all_profs <- rename(all_profs, ID = `Record#`)
# Chunk 7
all_profs <- mutate(all_profs,
Profession = str_split(FileName, '.csv', simplify = TRUE)[, 1],
Profession = str_to_lower(Profession))
# Chunk 8
all(filter(all_profs, Tagging == 'm')$Male == 1)
all(filter(all_profs, Tagging == 'f')$Female == 1)
all(filter(all_profs, Tagging == 'd')$Disregarded == 1)
all(filter(all_profs, Tagging == 'u')$Unknown == 1)
# Chunk 9
row_id <- which(is.na(all_profs$Disregarded) & all_profs$Tagging == 'd')
all_profs[row_id, ]$Disregarded <- 1
rm(row_id)
# Chunk 10
all(filter(all_profs, Tagging == 'd')$Disregarded == 1)
# Chunk 11
all_profs <- filter(all_profs, !is.na(Tagging))
# Chunk 12
all_profs %>% count(Profession, sort = TRUE) %>%
print(n = Inf)
# Chunk 13
prof_counts <- all_profs %>% count(Profession, Tagging) %>%
spread(Tagging, n, fill = 0) %>%
mutate(M_or_F = m + f) %>%
arrange(desc(M_or_F))
prof_counts %>% print(n = Inf)
# Chunk 14
prof_counts <- prof_counts %>%
mutate(MF_ratio = (m + 1) / (f + 1)) %>%
arrange(desc(MF_ratio))
prof_counts %>% print(n = Inf)
# Chunk 15
prof_counts <- mutate(prof_counts,
Weights = M_or_F / max(M_or_F))
# Chunk 16
write_csv(prof_counts, '../profession_corpus_counts.csv')
# Chunk 17
power <- read_csv('../hierarchy_experiment_cleaned.csv')
# Chunk 18
items <- power %>% select(HighPosition, LowPosition, PairName) %>%
filter(!duplicated(PairName))
left_join(items, prof_counts)
items$PowerfulM <- prof_counts[match(items$HighPosition, prof_counts$Profession), ]$m
items$PowerlessM <- prof_counts[match(items$LowPosition, prof_counts$Profession), ]$m
items$PowerfulF <- prof_counts[match(items$HighPosition, prof_counts$Profession), ]$f
items$PowerlessF <- prof_counts[match(items$LowPosition, prof_counts$Profession), ]$f
items
items$HighRatio <- prof_counts[match(items$HighPosition, prof_counts$Profession), ]$MF_Ratio
items$HighRatio <- prof_counts[match(items$HighPosition, prof_counts$Profession), ]$MF_ratio
# Chunk 1
# Packages:
library(tidyverse)
library(brms)
# Data:
power <- read_csv('data/hierarchy_experiment_cleaned.csv')
# ggplot2 theme:
source('timo_theme.R')
# Chunk 2
setwd('data/corpus_data')
# Chunk 3
all_files <- list.files()
# Chunk 4
all_profs <- c()
for (i in seq_along(all_files)) {
this_file <- read_csv(all_files[i])
this_file$FileName <- all_files[i]
all_profs <- bind_rows(all_profs, this_file)
}
all_profs %>% print(n = 2, width = Inf)
# Chunk 5
all_profs <- select(all_profs, `Record#`:FileName)
# Chunk 6
all_profs <- rename(all_profs, ID = `Record#`)
# Chunk 7
all_profs <- mutate(all_profs,
Profession = str_split(FileName, '.csv', simplify = TRUE)[, 1],
Profession = str_to_lower(Profession))
# Chunk 8
all(filter(all_profs, Tagging == 'm')$Male == 1)
all(filter(all_profs, Tagging == 'f')$Female == 1)
all(filter(all_profs, Tagging == 'd')$Disregarded == 1)
all(filter(all_profs, Tagging == 'u')$Unknown == 1)
# Chunk 9
row_id <- which(is.na(all_profs$Disregarded) & all_profs$Tagging == 'd')
all_profs[row_id, ]$Disregarded <- 1
rm(row_id)
# Chunk 10
all(filter(all_profs, Tagging == 'd')$Disregarded == 1)
# Chunk 11
all_profs <- filter(all_profs, !is.na(Tagging))
# Chunk 12
all_profs %>% count(Profession, sort = TRUE) %>%
print(n = Inf)
# Chunk 13
prof_counts <- all_profs %>% count(Profession, Tagging) %>%
spread(Tagging, n, fill = 0) %>%
mutate(M_or_F = m + f) %>%
arrange(desc(M_or_F))
prof_counts %>% print(n = Inf)
# Chunk 14
prof_counts <- prof_counts %>%
mutate(MF_ratio = (m + 1) / (f + 1)) %>%
arrange(desc(MF_ratio))
prof_counts %>% print(n = Inf)
# Chunk 15
prof_counts <- mutate(prof_counts,
Weights = M_or_F / max(M_or_F))
# Chunk 16
write_csv(prof_counts, '../profession_corpus_counts.csv')
# Chunk 17
power <- read_csv('../hierarchy_experiment_cleaned.csv')
# Chunk 18
items <- power %>% select(HighPosition, LowPosition, PairName) %>%
filter(!duplicated(PairName))
# Chunk 19
items$PowerfulM <- prof_counts[match(items$HighPosition, prof_counts$Profession), ]$m
items$PowerlessM <- prof_counts[match(items$LowPosition, prof_counts$Profession), ]$m
items$PowerfulF <- prof_counts[match(items$HighPosition, prof_counts$Profession), ]$f
items$PowerlessF <- prof_counts[match(items$LowPosition, prof_counts$Profession), ]$f
items$HighRatio <- prof_counts[match(items$HighPosition, prof_counts$Profession), ]$MF_ratio
items$LowRatio <- prof_counts[match(items$LowPosition, prof_counts$Profession), ]$MF_ratio
# Chunk 20
items <- mutate(items,
DoubleRatio = HighRatio / LowRatio)
write_csv(items, 'item_corpus.csv')
